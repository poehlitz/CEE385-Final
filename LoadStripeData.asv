
%Load Stripes Values from .csv - offset data by one to only get numeric
%data
%Maybe we could structure this similar to how we structured the fragility
%and loss functions
filenames=["Stripe1_Sa0.10_1col_S.csv","Stripe2_Sa0.35_1col_S.csv",...
    "Stripe3_Sa0.70_1col_S.csv","Stripe4_Sa1.05_1col_S.csv"];
stripes = [0.1,0.35,0.70,1.05];%Not sure how these are input into GUI

for i=1:ns
    disp(filenames(i))
    stripes_edp{i} = readtable(filenames(i));
end

%Load Each EDP into Structure
EDP=table2cell(stripes_edp{1}(:,1));
handles.EDPtypes = EDP;

% Loop through all of the different types of damage fragilities
for i = 1:ns
    for j=1:length(handles.EDPtypes)
    % Find the number DS for each componenet
    handles.EDPtypes.(EDP{i}) = table2array(stripes_edp{i}(j,2:end));
    end
end
    
%     % Pull out all values for a component Fragility
%     parse = table2cell(fragility(i, :));
%     parameters = zeros(nDam*2,2);
%     % Parse through all values for one component, return to better format
%     for j = 2:2*nDam+1
%         p1 = parse{2*j-1};
%         p2 = parse{2*j};
%         parameters(j-1, :) = [p1, p2];
%     end
%     % Save this better formatted damage fragility and loss fragility values
%     % to certain component in handles. Use the component title to label the
%     % certain variable in handles that we are saving to
%     handles.(categories{i}).DSParams = parameters(1:nDam,:);
%     handles.(categories{i}).LossParams = parameters(nDam+1:end,:);
%     
%     % Save the EDP type to the component
%     handles.(categories{i}).EDPtype = parse{2};
%     
%     % Assign EDP vector (defined above) to a certain fragility type for
%     % later use
%     EDP = handles.EDP.(parse{2});
%     handles.(categories{i}).EDP = EDP;
% 
